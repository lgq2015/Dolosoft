"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const script_1 = require("./script");
const signals_1 = require("./signals");
const util_1 = require("util");
class Session {
    constructor(impl) {
        this.impl = impl;
        const { signals } = impl;
        this.detached = new signals_1.Signal(signals, "detached");
    }
    get pid() {
        return this.impl.pid;
    }
    detach() {
        return this.impl.detach();
    }
    enableChildGating() {
        return this.impl.enableChildGating();
    }
    disableChildGating() {
        return this.impl.disableChildGating();
    }
    async createScript(source, options = {}) {
        const { name = null, runtime = null } = options;
        return new script_1.Script(await this.impl.createScript(source, name, runtime));
    }
    async createScriptFromBytes(bytes, options = {}) {
        const { name = null, runtime = null } = options;
        return new script_1.Script(await this.impl.createScriptFromBytes(bytes, name, runtime));
    }
    compileScript(source, options = {}) {
        const { name = null, runtime = null } = options;
        return this.impl.compileScript(source, name, runtime);
    }
    enableDebugger(options = {}) {
        const { port = 0 } = options;
        return this.impl.enableDebugger(port);
    }
    disableDebugger() {
        return this.impl.disableDebugger();
    }
    enableJit() {
        return this.impl.enableJit();
    }
    [util_1.inspect.custom](depth, options) {
        return "Session " + util_1.inspect({
            pid: this.pid
        }, options);
    }
}
exports.Session = Session;
var SessionDetachReason;
(function (SessionDetachReason) {
    SessionDetachReason["ApplicationRequested"] = "application-requested";
    SessionDetachReason["ProcessReplaced"] = "process-replaced";
    SessionDetachReason["ProcessTerminated"] = "process-terminated";
    SessionDetachReason["ServerTerminated"] = "server-terminated";
    SessionDetachReason["DeviceLost"] = "device-lost";
})(SessionDetachReason = exports.SessionDetachReason || (exports.SessionDetachReason = {}));
